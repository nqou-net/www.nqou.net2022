#!/usr/bin/env perl
use utf8;
use strict;
use warnings;
use Path::Tiny qw(path);
use YAML         ();
use Time::Moment ();

my $root = path(__FILE__)->absolute->parent(2);

# 記事を取得
my $posts_dir = path($root, 'source', '_posts');
my $iterator = $posts_dir->iterator(+{recurse => 1});

# タイムゾーンを取得
my $tm        = Time::Moment->now;
my $offset    = $tm->offset;
my $jp_offset = 540;

# 記事から時間を取得して、名称変更
while (my $post = $iterator->()) {
    next unless $post->is_file;
    my ($yaml, $after) = split /\n---/, $post->slurp_utf8;
    my $info = YAML::Load($yaml);

    my $modified;

    # ISO8601を持っていない場合はdateからISOを作成
    unless (exists $info->{iso8601}) {

        # すでに変換済みであればそのまま渡す
        if (-1 < index($info->{date}, 'T')) {
            $info->{iso8601} = $info->{date};
        }
        else {
            my $date     = join('T', split(/\s/, $info->{date})) . 'Z';
            my $tm       = Time::Moment->from_string($date);
            my $new_date = $tm->with_offset_same_local($offset);
            $info->{iso8601} = $new_date->to_string;
        }

        # date はURLのために日本時間へ統一
        my $tm       = Time::Moment->from_string($info->{iso8601});
        my $url_date = $tm->with_offset_same_instant($jp_offset);
        $info->{date} = $url_date->strftime('%F %T');
        $modified = 1;
    }

    # 本文のタグを除去
    if (-1 < index($after, '<!--more-->')) {
        $after =~ s{<!--more-->}{}msg;
        $modified = 1;
    }
    if ($modified) {

        # 結合して出力
        my $dump_yaml = YAML::Dump($info);
        my $body = join qq{\n---}, $dump_yaml, $after;
        $post->spew_utf8($body);
    }

    # 時間でファイル名を変更
    my $tm       = Time::Moment->from_string($info->{iso8601})->with_offset_same_instant($jp_offset);
    my $path     = $tm->strftime('%Y/%m/%d/%H%M%S');
    my $new_post = path($posts_dir, qq{$path.md})->absolute;
    $new_post->parent->mkpath;
    $post->move($new_post->stringify);
}
